// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddTodo extends ethereum.Event {
  get params(): AddTodo__Params {
    return new AddTodo__Params(this);
  }
}

export class AddTodo__Params {
  _event: AddTodo;

  constructor(event: AddTodo) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get todoId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get todoTask(): string {
    return this._event.parameters[2].value.toString();
  }

  get isCompleted(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class ToggleCompletedStatus extends ethereum.Event {
  get params(): ToggleCompletedStatus__Params {
    return new ToggleCompletedStatus__Params(this);
  }
}

export class ToggleCompletedStatus__Params {
  _event: ToggleCompletedStatus;

  constructor(event: ToggleCompletedStatus) {
    this._event = event;
  }

  get todoId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isCompleted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class TodoContract__idToTodoResult {
  value0: BigInt;
  value1: string;
  value2: boolean;

  constructor(value0: BigInt, value1: string, value2: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }

  getTodoId(): BigInt {
    return this.value0;
  }

  getTodoTask(): string {
    return this.value1;
  }

  getIsCompleted(): boolean {
    return this.value2;
  }
}

export class TodoContract extends ethereum.SmartContract {
  static bind(address: Address): TodoContract {
    return new TodoContract("TodoContract", address);
  }

  _idTodo(): BigInt {
    let result = super.call("_idTodo", "_idTodo():(uint256)", []);

    return result[0].toBigInt();
  }

  try__idTodo(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_idTodo", "_idTodo():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  idToTodo(param0: BigInt): TodoContract__idToTodoResult {
    let result = super.call(
      "idToTodo",
      "idToTodo(uint256):(uint256,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new TodoContract__idToTodoResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toBoolean()
    );
  }

  try_idToTodo(
    param0: BigInt
  ): ethereum.CallResult<TodoContract__idToTodoResult> {
    let result = super.tryCall(
      "idToTodo",
      "idToTodo(uint256):(uint256,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TodoContract__idToTodoResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toBoolean()
      )
    );
  }
}

export class AddTodoCall extends ethereum.Call {
  get inputs(): AddTodoCall__Inputs {
    return new AddTodoCall__Inputs(this);
  }

  get outputs(): AddTodoCall__Outputs {
    return new AddTodoCall__Outputs(this);
  }
}

export class AddTodoCall__Inputs {
  _call: AddTodoCall;

  constructor(call: AddTodoCall) {
    this._call = call;
  }

  get _todoTask(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddTodoCall__Outputs {
  _call: AddTodoCall;

  constructor(call: AddTodoCall) {
    this._call = call;
  }
}

export class ToggleCall extends ethereum.Call {
  get inputs(): ToggleCall__Inputs {
    return new ToggleCall__Inputs(this);
  }

  get outputs(): ToggleCall__Outputs {
    return new ToggleCall__Outputs(this);
  }
}

export class ToggleCall__Inputs {
  _call: ToggleCall;

  constructor(call: ToggleCall) {
    this._call = call;
  }

  get todoId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleCall__Outputs {
  _call: ToggleCall;

  constructor(call: ToggleCall) {
    this._call = call;
  }
}
